(include "lib/asm/func.inc")
(include "sys/math/class.inc")
(include "./class.inc")
(include "././lisp/class.inc")

;generic fixed math op
(redefun mathop (_)
	(entry 'fixed (sym (cat :lisp_ (rest _))) '(:r0 :r1))
	(errorif-lisp-args-sig 'error :r1 1)
	(vp-push :r0)
	(assign '((:r1 array_begin)) '(:r2))
	(call 'fixed _ '((:r2 0)) '(_ :r1))
	(vp-pop :r0)
	(exit 'fixed (sym (cat :lisp_ (rest _))) '(:r0 :r1))
	(vp-ret))

(def-method 'fixed :lisp_sin)
	;inputs
	;:r0 = lisp object (ptr)
	;:r1 = args list object (ptr)
	;outputs
	;:r0 = lisp object (ptr)
	;:r1 = return value object (ptr)
	;trashes
	;:r1-:r14

	(mathop :sin)

(errorcase
(vp-label 'error)
	(jump 'lisp :repl_error '(:r0 "(sin fixed)" +error_msg_wrong_types :r1))
	(signature '(fixed)))

(def-func-end)

(def-method 'fixed :lisp_cos)
	;inputs
	;:r0 = lisp object (ptr)
	;:r1 = args list object (ptr)
	;outputs
	;:r0 = lisp object (ptr)
	;:r1 = return value object (ptr)
	;trashes
	;:r1-:r14

	(mathop :cos)

(errorcase
(vp-label 'error)
	(jump 'lisp :repl_error '(:r0 "(cos fixed)" +error_msg_wrong_types :r1))
	(signature '(fixed)))

(def-func-end)

(def-method 'fixed :lisp_frac)
	;inputs
	;:r0 = lisp object (ptr)
	;:r1 = args list object (ptr)
	;outputs
	;:r0 = lisp object (ptr)
	;:r1 = return value object (ptr)
	;trashes
	;:r1-:r14

	(mathop :frac)

(errorcase
(vp-label 'error)
	(jump 'lisp :repl_error '(:r0 "(frac num)" +error_msg_wrong_types :r1))
	(signature '(fixed)))

(def-func-end)

(def-method 'fixed :lisp_floor)
	;inputs
	;:r0 = lisp object (ptr)
	;:r1 = args list object (ptr)
	;outputs
	;:r0 = lisp object (ptr)
	;:r1 = return value object (ptr)
	;trashes
	;:r1-:r14

	(mathop :floor)

(errorcase
(vp-label 'error)
	(jump 'lisp :repl_error '(:r0 "(floor num)" +error_msg_wrong_types :r1))
	(signature '(fixed)))

(def-func-end)

(def-method 'fixed :lisp_recip)
	;inputs
	;:r0 = lisp object (ptr)
	;:r1 = args list object (ptr)
	;outputs
	;:r0 = lisp object (ptr)
	;:r1 = return value object (ptr)
	;trashes
	;:r1-:r14

	(entry 'fixed :lisp_recip '(:r0 :r1))

	(errorif-lisp-args-sig 'error :r1 1)

	(vp-push :r0)
	(assign '((:r1 array_begin)) '(:r0))
	(assign '((:r0 0)) '(:r0))

(errorcase
	(assign '((:r0 num_value)) '(:r2))
	(gotoif '(:r2 = 0) 'error1))

	(call 'fixed :recip '(:r0) '(_ :r1))
	(vp-pop :r0)

	(exit 'fixed :lisp_recip '(:r0 :r1))
	(vp-ret)

(errorcase
(vp-label 'error1)
	(vp-pop :r0)
(vp-label 'error)
	(jump 'lisp :repl_error '(:r0 "(recip fixed)" +error_msg_wrong_types :r1))
	(signature '(fixed)))

(def-func-end)
