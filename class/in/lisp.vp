(include "lib/asm/func.inc")
(include "./class.inc")
(include "././lisp/class.inc")

(def-method 'in :lisp_create)
	;inputs
	;:r0 = lisp object (ptr)
	;:r1 = args list object (ptr)
	;outputs
	;:r0 = lisp object (ptr)
	;:r1 = return value object (ptr)
	;trashes
	;:r1-:r14

	(entry 'in :lisp_create '(:r0 :r1))

	(errorif-lisp-args-len 'error :r1 /= 0)

	(vp-push :r0)
	(call 'in :create '(0) '(:r1))
	(vp-pop :r0)

	(exit 'in :lisp_create '(:r0 :r1))
	(vp-ret)

(errorcase
(vp-label 'error)
	(jump 'lisp :repl_error '(:r0 "(in-stream)" +error_msg_wrong_types :r1)))

(def-func-end)

(def-method 'in :lisp_next_msg)
	;inputs
	;:r0 = lisp object (ptr)
	;:r1 = args list object (ptr)
	;outputs
	;:r0 = lisp object (ptr)
	;:r1 = return value object (ptr)
	;trashes
	;:r1-:r14

	(entry 'in :lisp_next_msg '(:r0 :r1))

	(errorif-lisp-args-sig 'error :r1 1)

	(vp-push :r0)
	(defq in (method-input 'in :next_msg))
	(array-bind-args :r1 in)
	(call 'in :next_msg in '(:r1))
	(class/obj/ref :r1 :r2)
	(vp-pop :r0)

	(exit 'in :lisp_next_msg '(:r0 :r1))
	(vp-ret)

(errorcase
(vp-label 'error)
	(jump 'lisp :repl_error '(:r0 "(in-next-msg in_stream)" +error_msg_wrong_types :r1))
	(signature '(in)))

(def-func-end)
